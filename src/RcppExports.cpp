// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// arma_dist
arma::mat arma_dist(const arma::mat& X);
RcppExport SEXP _tutorial_arma_dist(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_dist(X));
    return rcpp_result_gen;
END_RCPP
}
// demo_class
void demo_class();
RcppExport SEXP _tutorial_demo_class() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    demo_class();
    return R_NilValue;
END_RCPP
}
// test
void test(size_t seed, NumericVector nn1, arma::vec nn2, std::vector<double> nn3);
RcppExport SEXP _tutorial_test(SEXP seedSEXP, SEXP nn1SEXP, SEXP nn2SEXP, SEXP nn3SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nn1(nn1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nn2(nn2SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type nn3(nn3SEXP);
    test(seed, nn1, nn2, nn3);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tutorial_arma_dist", (DL_FUNC) &_tutorial_arma_dist, 1},
    {"_tutorial_demo_class", (DL_FUNC) &_tutorial_demo_class, 0},
    {"_tutorial_test", (DL_FUNC) &_tutorial_test, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_tutorial(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
